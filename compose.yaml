services:
  # src: https://github.com/bitnami/containers/blob/main/bitnami/kafka/docker-compose.yml
  kafka:
    image: bitnami/kafka:3.8.0
    restart: unless-stopped
    ports:
      - 9094:9094
    volumes:
      - kafka_data:/bitnami
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://${CONTAINER_HOST_IP:-127.0.0.1}:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  telegraf:
    image: telegraf:1.32.1-alpine
    restart: unless-stopped
    profiles:
      - grafana
    volumes:
      - ./telegraf:/etc/telegraf/telegraf.d:ro
    environment:
      INFLUX_TOKEN: $INFLUX_TOKEN

  influxdb:
    image: influxdb:2.7.10-alpine
    restart: unless-stopped
    profiles:
      - grafana
    # ports:
    #   - 8086:8086
    volumes:
      - influxdb_data:/var/lib/influxdb2
      # - "$PWD/config:/etc/influxdb2"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influx
      DOCKER_INFLUXDB_INIT_PASSWORD: influx-sde
      DOCKER_INFLUXDB_INIT_ORG: SdeLab4
      DOCKER_INFLUXDB_INIT_BUCKET: sde_lab_4
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: $INFLUX_TOKEN

  grafana:
    image: grafana/grafana:11.2.2
    restart: unless-stopped
    profiles:
      - grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana:/etc/grafana/provisioning:ro
    environment:
      GF_INSTALL_PLUGINS: hamedkarbasi93-kafka-datasource
      INFLUX_TOKEN: $INFLUX_TOKEN

volumes:
  grafana_data:
  influxdb_data:
  kafka_data:
